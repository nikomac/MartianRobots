// <auto-generated />
using System;
using MartianRobots.Repositories.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MartianRobots.Repositories.Migrations
{
    [DbContext(typeof(MartianRobotsDbContext))]
    [Migration("20220210165646_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("MartianRobots.Common.Entities.Grid", b =>
                {
                    b.Property<byte[]>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<int>("MaxX")
                        .HasColumnType("int");

                    b.Property<int>("MaxY")
                        .HasColumnType("int");

                    b.Property<byte[]>("MissionID")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.HasKey("ID");

                    b.HasIndex("MissionID")
                        .IsUnique();

                    b.ToTable("Grids");
                });

            modelBuilder.Entity("MartianRobots.Common.Entities.Mission", b =>
                {
                    b.Property<byte[]>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Scent")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Missions");
                });

            modelBuilder.Entity("MartianRobots.Common.Entities.Robot", b =>
                {
                    b.Property<byte[]>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("CurrentCoordinate")
                        .HasColumnType("text");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<string>("InitialCoordinate")
                        .HasColumnType("text");

                    b.Property<string>("Instructions")
                        .HasColumnType("text");

                    b.Property<bool>("IsLost")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastKnownCoordinate")
                        .HasColumnType("text");

                    b.Property<byte[]>("MissionID")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.HasKey("ID");

                    b.HasIndex("MissionID");

                    b.ToTable("Robots");
                });

            modelBuilder.Entity("MartianRobots.Common.Entities.Grid", b =>
                {
                    b.HasOne("MartianRobots.Common.Entities.Mission", null)
                        .WithOne("Grid")
                        .HasForeignKey("MartianRobots.Common.Entities.Grid", "MissionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MartianRobots.Common.Entities.Robot", b =>
                {
                    b.HasOne("MartianRobots.Common.Entities.Mission", null)
                        .WithMany("Robots")
                        .HasForeignKey("MissionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MartianRobots.Common.Entities.Mission", b =>
                {
                    b.Navigation("Grid");

                    b.Navigation("Robots");
                });
#pragma warning restore 612, 618
        }
    }
}
